# This file contains common pin mappings for the LDO Voron 2.4 Rev. D kit
# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON 2.4 250/300/350mm Leviathan V1.1 + Nitehawk-SB config

[include mainsail.cfg]
[include nozzle-scrub.cfg]
#[include klicky-probe.cfg]

[exclude_object]

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_39003F000251303532383235-if00
restart_method: command
##--------------------------------------------------------------------

[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_4E363334320B267D-if00    # new
#serial: /dev/serial/by-id/usb-Klipper_rp2040_3033393834041284-if00    # original
restart_method: command
##--------------------------------------------------------------------

[input_shaper]
shaper_freq_x: 54.8
shaper_type_x: mzv
shaper_freq_y: 38.2
shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0



#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PC1
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
#diag0_pin: ^!PG1
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PC2
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
#diag0_pin: ^!PE10
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16  
microsteps: 32
endstop_pin: PC3
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PC10
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to STEPPER 3
[stepper_z3]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z3]
uart_pin: PG8
#diag_pin: ^!PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
    
#####################################################################
#   Extruder
#####################################################################

##  Connected to STEPPER 0
##  Heater - HEATER
##  Thermistor - TH0
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
#step_pin: PD10
#dir_pin: PD9
#enable_pin: !PD13
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:gpio9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio29
pullup_resistor: 2200
min_temp: 10
max_temp: 270
max_power: 1.0
# min_extrude_temp: 170
min_extrude_temp: 190
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Connected to STEPPER 4
[tmc2209 extruder]
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
#uart_pin: PD11
#tx_pin: PD12
interpolate: false
run_current: 0.5
sense_resistor: 0.100
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

#[probe]
##  Inductive Probe
##  Connected to Z-PROBE
##  This probe is not used for Z height, only Quad Gantry Leveling
#pin: nhk:gpio10
#x_offset: 0
#y_offset: 25.0
#z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: nhk:gpio6
##tachometer_pin: PB0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: nhk:gpio5
#tachometer_pin: PB4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
#  Controller fan - FAN2
pin: PF7
#tachometer_pin: PF6
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

#[heater_fan exhaust_fan]
[fan_generic exhaust_fan]
##  Exhaust fan - FAN3
pin: PF9
#tachometer_pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1

[fan_generic nevermore]
# nevermore filter
pin: PB3
kick_start_time: 0.5  #off_below: 0.1

#####################################################################
#   Filament sensor
#####################################################################

#[filament_switch_sensor Filament]
#pause_on_runout: True
#runout_gcode: M600
#insert_gcode:
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: !PC0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
[output_pin caselight]
pin: PE6
pwm:true
hardware_pwm: False
value: 1 #startup value
shutdown_value: 0
#value:1
cycle_time: 0.00025

## Connected to led (nitehawk sb)
[output_pin pcb_led]
pin: !nhk:gpio8

## Connected to NEOPIXEL (nitehawk sb)
[neopixel rgb_light]
pin: nhk:gpio7
#pin: PF10
chain_count: 3
color_order: GRBW
initial_RED: 0.7
initial_GREEN: 0.7
initial_BLUE: 1
initial_WHITE: 1

#[output_pin pix]
#pin: nhk:gpio7


#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio21
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20


#####################################################################
#   TH
# #####################################################################
[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio28
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor nh_temp]
## Nitehawk PCB Sensor
sensor_type: CMFB103F3950FANT
sensor_pin: nhk:gpio26
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: nh_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:234,350
speed:100
z_hop:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10



##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG9, EXP1_2=PG12,
    EXP1_3=PG13, EXP1_4=PG14,
    EXP1_5=PC13, EXP1_6=PC14,    # Slot in the socket on this side
    EXP1_7=PC15, EXP1_8=PF0,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE2, EXP2_4=PE4,
    EXP2_5=PE3, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PE5, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PE4

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[bed_mesh]
mesh_min = 30, 30
mesh_max = 270, 270
speed = 900
horizontal_move_z = 10
probe_count = 7,7
algorithm = bicubic
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
##[(9x9)-1] / 2 = 40
#relative_reference_index: 40
zero_reference_position: 150, 150
#relative_reference_index: 15
split_delta_z = 0.0125
move_check_distance = 3
mesh_pps = 4,4
fade_start = 0
fade_end = 2
fade_target = 0



###
### BTT Eddy
###

# The MCU section only applies to the Eddy USB. For Eddy Coil you will use the MCU name of the toolboard that you connected the Eddy Coil to.
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044506108AA3D1C-if00   #/dev/serial/by-id/usb-Klipper_rp2040_eddy-if00 # This is the serial address of your eddy probe. This can be found by using the terminal of your klipper instance (typically through SSH) and using the command ```ls /dev/serial/by-id``` 
restart_method: command
#Did you read all of the comments before the macros? Make sure that you do and then uncomment the ones that you need. Remove this line when you are done.

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: 21.42

# This section is only relevant for Eddy USB. Comment it out for Eddy Coil.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 35, 51.42  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 315, 308.58 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 9, 9
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# Uncomment this if you are using Eddy as the probe AND the homing endstop
#[safe_z_home]
#home_xy_position: 150, 150 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
#z_hop: 10
#z_hop_speed: 25
#speed: 200

###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[save_variables]
#filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
#[force_move]
#enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[delayed_gcode RESTORE_PROBE_OFFSET]
#initial_duration: 1.
#gcode:
#  {% set svv = printer.save_variables.variables %}
#  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
#  G28.1 {rawparams}
#  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
#    PROBE
#    SET_Z_FROM_PROBE
#  {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
#[gcode_macro SET_Z_FROM_PROBE]
#gcode:
#    {% set cf = printer.configfile.settings %}
#    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
#    G90
#    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[gcode_macro Z_OFFSET_APPLY_PROBE]
#rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
#gcode:
#  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
#  {% if params.Z_ADJUST %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#  {% endif %}
#  {% if params.Z %}
#    {% set paramList = rawparams.split() %}
#    {% for i in range(paramList|length) %}
#      {% if paramList[i]=="Z=0" %}
#        {% set temp=paramList.pop(i) %}
#        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#        {% if paramList.append(temp) %}{% endif %}
#      {% endif %}
#    {% endfor %}
#    {% set rawparams=paramList|join(' ') %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg

###
### end of BTT Eddy
###

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.910
#*# pid_ki = 2.419
#*# pid_kd = 164.629
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.480
#*# pid_ki = 3.723
#*# pid_kd = 54.469
#*#
#*# [stepper_z]
#*# position_endstop = 0.739
#*#
#*# [probe]
#*# z_offset = 1.400
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3258136.153,0.090000:3257120.805,0.130000:3256144.667,
#*# 	0.170000:3255114.332,0.210000:3254158.384,0.250000:3253229.449,
#*# 	0.290000:3252253.488,0.330000:3251274.377,0.370000:3250355.279,
#*# 	0.410000:3249455.167,0.450000:3248529.600,0.490000:3247637.215,
#*# 	0.530000:3246797.565,0.570000:3245909.339,0.610000:3245082.956,
#*# 	0.650000:3244221.553,0.690000:3243450.621,0.730000:3242662.733,
#*# 	0.770000:3241885.918,0.810000:3241101.650,0.850000:3240366.104,
#*# 	0.890000:3239608.964,0.930000:3238885.406,0.970000:3238104.349,
#*# 	1.010000:3237423.592,1.050000:3236728.773,1.090000:3236054.626,
#*# 	1.130000:3235377.511,1.170000:3234699.296,1.210000:3234014.819,
#*# 	1.250000:3233361.485,1.290000:3232718.219,1.330000:3232099.144,
#*# 	1.370000:3231448.095,1.410000:3230822.983,1.450000:3230195.546,
#*# 	1.490000:3229582.626,1.530000:3228976.205,1.570000:3228390.432,
#*# 	1.610000:3227785.592,1.650000:3227202.253,1.690000:3226649.076,
#*# 	1.730000:3226062.683,1.770000:3225513.393,1.810000:3224947.914,
#*# 	1.850000:3224381.406,1.890000:3223847.253,1.930000:3223305.173,
#*# 	1.970000:3222765.956,2.010000:3222227.594,2.050000:3221703.244,
#*# 	2.090000:3221186.068,2.130000:3220680.451,2.170000:3220146.972,
#*# 	2.210000:3219659.461,2.250000:3219168.472,2.290000:3218705.699,
#*# 	2.330000:3218220.750,2.370000:3217744.315,2.410000:3217272.997,
#*# 	2.450000:3216824.637,2.490000:3216364.526,2.530000:3215917.100,
#*# 	2.570000:3215457.225,2.610000:3215022.087,2.650000:3214617.979,
#*# 	2.690000:3214179.132,2.730000:3213733.113,2.770000:3213349.017,
#*# 	2.810000:3212953.611,2.850000:3212551.862,2.890000:3212145.919,
#*# 	2.930000:3211754.910,2.970000:3211392.703,3.010000:3210989.200,
#*# 	3.050000:3210629.498,3.090000:3210270.848,3.130000:3209912.464,
#*# 	3.170000:3209565.945,3.210000:3209223.181,3.250000:3208895.055,
#*# 	3.290000:3208561.699,3.330000:3208229.392,3.370000:3207891.868,
#*# 	3.410000:3207589.190,3.450000:3207273.027,3.490000:3206952.229,
#*# 	3.530000:3206656.037,3.570000:3206356.239,3.610000:3206071.438,
#*# 	3.650000:3205787.135,3.690000:3205478.309,3.730000:3205218.006,
#*# 	3.770000:3204945.011,3.810000:3204681.104,3.850000:3204406.618,
#*# 	3.890000:3204157.670,3.930000:3203892.596,3.970000:3203642.035,
#*# 	4.010000:3203381.600,4.050000:3203122.998
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 35.801932
#*# drift_calibration =
#*# 	3290769.823430, -1306.872267, 10.124773
#*# 	3272058.978521, -998.884845, 7.171405
#*# 	3257865.548827, -802.996114, 5.433675
#*# 	3245686.693307, -634.367423, 4.074835
#*# 	3234495.889726, -466.755300, 2.764878
#*# 	3224662.899226, -316.840372, 1.608623
#*# 	3217035.521249, -217.802822, 0.930306
#*# 	3211101.206182, -146.308598, 0.417379
#*# 	3205943.862660, -76.213963, -0.127568
#*# drift_calibration_min_temp = 34.34651137639865
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.059716, 0.081943, 0.069645, 0.046855, 0.043167, 0.037436, 0.054743, 0.070346, 0.089877
#*# 	0.062704, 0.073466, 0.066846, 0.033975, 0.034712, 0.015175, 0.033465, 0.036183, 0.047422
#*# 	0.043544, 0.062835, 0.051886, 0.023341, 0.017316, 0.007671, 0.009482, 0.013498, 0.024333
#*# 	0.028887, 0.039024, 0.031233, 0.001928, -0.003294, -0.014898, -0.011895, -0.009165, -0.014512
#*# 	0.020456, 0.046343, 0.031830, 0.004193, -0.000220, -0.012803, -0.004205, -0.017370, -0.005444
#*# 	0.047877, 0.056275, 0.044055, 0.013497, 0.008349, 0.000807, 0.006341, 0.001648, 0.008746
#*# 	0.047876, 0.062327, 0.048954, 0.026878, 0.024812, 0.022604, 0.026341, 0.021730, 0.034573
#*# 	0.056028, 0.063347, 0.058883, 0.041956, 0.040102, 0.040936, 0.048065, 0.049087, 0.070344
#*# 	0.057106, 0.074166, 0.068114, 0.053664, 0.056892, 0.059528, 0.068245, 0.070914, 0.106568
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 315.0
#*# min_y = 51.42
#*# max_y = 308.53999999999996
